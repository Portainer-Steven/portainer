name: ci

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - "*"
  #     - "*/*"
  #     - "!master"
  # pull_request:
  #   branches:
  #     - "*"

env:
  DOCKER_HUB_REPO: ssbkang/portainer-ce
  CONTINAER_IMAGE_TAG: pr${{ github.event.pull_request.labels.name }}
  NODE_ENV: testing

jobs:
  build:
    strategy:
      matrix:
        config:
          - { platform: linux, arch: amd64 }
          - { platform: linux, arch: arm64 }
          - { platform: windows, arch: amd64, version: 1809 }
          - { platform: windows, arch: amd64, version: ltsc2022 }
    runs-on: ubuntu-latest
    steps:
      - name: "[preparation] checkout the current branch"
        uses: actions/checkout@v3.5.3
      - name: "[preparation] extract the branch name"
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: "[preparation] set up golang 1.19.5"
        uses: actions/setup-go@v4.0.1
        with:
          go-version: "1.19.5"
      - name: "[preparation] set up node.js 18.x"
        uses: actions/setup-node@v2.5.2
        with:
          node-version: "18.x"
      - name: "[execution] build linux & windows portainer binaries"
        run: |
          make build-all PLATFORM=${{ matrix.config.platform }} ARCH=${{ matrix.config.arch }} ENV=${NODE_ENV}
          ls -latrh dist
      - name: "[preparation] set up qemu"
        uses: docker/setup-qemu-action@v2
      - name: "[preparation] set up docker buildx"
        uses: docker/setup-buildx-action@v2
      - name: "[preparation] docker login"
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: "[execution] build docker images"
        env:
          if: github.event.pull_request.labels.name == ''
          CONTAINER_IMAGE_TAG: ${{ steps.extract_branch.outputs.branch }}
        run: |
          if [ "${{ matrix.config.platform }}" == "windows" ]; then
            CONTAINER_IMAGE_TAG="${CONTAINER_IMAGE_TAG}-${{ matrix.config.platform }}${{ matrix.config.version }}-${{ matrix.config.arch }}"
            docker buildx build --load --platform ${{ matrix.config.platform }}/${{ matrix.config.arch }} --build-arg OSVERSION=${{ matrix.config.version }} -t "${DOCKER_HUB_REPO}:${CONTAINER_IMAGE_TAG}" -f build/${{ matrix.config.platform }}/Dockerfile .
          else 
            CONTAINER_IMAGE_TAG="${CONTAINER_IMAGE_TAG}-${{ matrix.config.platform }}-${{ matrix.config.arch }}"
            docker buildx build --load --platform ${{ matrix.config.platform }}/${{ matrix.config.arch }} -t "${DOCKER_HUB_REPO}:${CONTAINER_IMAGE_TAG}" -f build/${{ matrix.config.platform }}/Dockerfile .
            docker buildx build --load --platform ${{ matrix.config.platform }}/${{ matrix.config.arch }} -t "${DOCKER_HUB_REPO}:${CONTAINER_IMAGE_TAG}-alpine" -f build/${{ matrix.config.platform }}/alpine.Dockerfile .
          fi

          docker image ls
